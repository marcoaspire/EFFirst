@model EFFirst.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Update", "Products", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal container">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductID)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfPurchase, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @if (Model.DateOfPurchase.HasValue)
                {
                    @*@Html.EditorFor(model => model.DateOfPurchase.Value.ToShortDateString(), new { htmlAttributes = new { @class = "form-control", type = "Date" } })*@
                    @Html.EditorFor(model => model.DateOfPurchase.Value, new { htmlAttributes = new { @class = "form-control", type = "Date" } })

                    @Html.ValidationMessageFor(model => model.DateOfPurchase, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.DateOfPurchase, new { htmlAttributes = new { @class = "form-control", type = "Date" } })
                    @Html.ValidationMessageFor(model => model.DateOfPurchase, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailabilityStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.AvailabilityStatus, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AvailabilityStatus, "", new { @class = "text-danger" })*@
                @Html.DropDownList("AvailabilityStatus", (List<SelectListItem>)ViewBag.Options, null, null)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.CategoryID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })*@


                @Html.DropDownList("CategoryID", new SelectList(ViewBag.Categories, "CategoryID", "CategoryName"), null, null)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrandID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.BrandID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })*@


                @Html.DropDownList("BrandID", new SelectList(ViewBag.Brands, "BrandID", "BrandName"), null, null)

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
